<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" creationComplete="initMap()" xmlns:openscales="http://openscales.org">
	<mx:Canvas width="100%" height="100%">
		<openscales:Map id="fxmap" height="100%" width="100%" horizontalScrollPolicy="off" verticalScrollPolicy="off">
			<openscales:Spinner id="spinner" x="{width / 2}" y="{height / 2}"/>
			<openscales:MousePosition x="{width - 170}" y="{height - 20}"/>
		</openscales:Map>
		<mx:VBox>
			<openscales:ZoomComponent map="{map}"/>
			<mx:Spacer width="100%" />
			<openscales:ZoomBoxComponent map="{map}"
									 width="32"
									 height="32"/>
		</mx:VBox>
	</mx:Canvas>
	
	<mx:Script>
		<![CDATA[
			import com.xoomcode.acidmaps.AMSParameters;
			import com.xoomcode.acidmaps.interpolate.InterpolationStrategy;
			import com.xoomcode.acidmaps.simplify.SimplifyMethod;
			import com.xoomcode.constants.Constants;
			
			import org.openscales.core.Map;
			import org.openscales.core.Trace;
			import org.openscales.core.basetypes.Bounds;
			import org.openscales.core.handler.mouse.DragHandler;
			import org.openscales.core.handler.mouse.WheelHandler;
			import org.openscales.core.layer.ogc.WMSC;
			import org.openscales.core.layer.params.ogc.WMSParams;
			
			[Bindable] private var map:Map = null;
			[Bindable] public var displayTrace:Boolean = false;	
			[Bindable] public var displayFirebugTrace:Boolean = false;
			private var bounds:Bounds;
			
			public var maxZoomLevel:int = 16;
			public var minZoomLevel:int = 0;
			
			private var intervalsSize:int = 5;

			private function initMap():void {
				Trace.useFireBugConsole = displayFirebugTrace;
				map = fxmap.map;
				
				bounds = new Bounds(2536798.25, 6366961, 2537666.75, 6367985.5);
				map.maxExtent = bounds; 
				map.addHandler(new DragHandler());
				map.addHandler(new WheelHandler());
				map.tweenZoomEnabled = true;
				
				var wmsLayer:WMSC = buildWMSLayer();
				wmsLayer.isBaseLayer = true;
				wmsLayer.maxZoomLevel = maxZoomLevel;
				wmsLayer.minZoomLevel = minZoomLevel;
				map.addLayer(wmsLayer);

				var amsLayer:WMSC = buildAMSLayer();
				amsLayer.isBaseLayer = false;
				amsLayer.maxZoomLevel = maxZoomLevel;
				amsLayer.minZoomLevel = minZoomLevel;
				map.addLayer(amsLayer);
			}
			
			public function buildWMSLayer():WMSC {
				var layerName:String = "acidmaps:lots";
				var wmsParams:WMSParams = new WMSParams(layerName);
				wmsParams.format = "image/png";
				wmsParams.srs = "EPSG:22182";
				wmsParams.tiled = true;
				wmsParams.transparent = false;
				wmsParams.exceptions = "application/vnd.ogc.se_inimage";
				
				var layer:WMSC = new WMSC(name, "http://localhost:8080/geoserver/" + "wms", layerName, false, true, wmsParams.srs);
				layer.params = wmsParams;
				layer.maxExtent = new Bounds(bounds.left, bounds.bottom, bounds.right, bounds.top);
				layer.generateResolutions(maxZoomLevel, 4.001953125);
				return layer;
			}
			
			public function buildAMSLayer():WMSC {
				var layerName:String = "acidmaps:posts";
				var amsParams:AMSParameters = new AMSParameters(layerName, "value");
				amsParams.format = "image/png";
				amsParams.srs = "EPSG:22182";
				amsParams.tiled = true;
				amsParams.transparent = false;
				amsParams.exceptions = "application/vnd.ogc.se_inimage";
				amsParams.intervals = createIntervals();
				amsParams.intervalsColors = createIntervalsColors();
				amsParams.filter = "NOT (lot_id = 100)";
				amsParams.simplifyMethod = SimplifyMethod.GRID;
				amsParams.simplifySize = 20000;
				amsParams.interpolationStrategy = InterpolationStrategy.INVERSE_DISTANCE_WEIGHTING;
				
				var layer:WMSC = new WMSC(name, "http://localhost:8080/geoserver/" + "wms", layerName, false, true, amsParams.srs);
				layer.params = amsParams;
				layer.maxExtent = new Bounds(bounds.left, bounds.bottom, bounds.right, bounds.top);
				layer.generateResolutions(maxZoomLevel, 4.001953125);
				return layer;
			}
			
			private function createIntervals():Array {
				var intervals:Array = new Array(intervalsSize);
				intervals[0] = 10;
				intervals[1] = 22;
				intervals[2] = 45;
				intervals[3] = 70;
				intervals[4] = 100;
				return intervals;
			}
			
			private function createIntervalsColors():Array {
			    var colors:Array = new Array([0x20, 0x20, 0x20, 0x30,
					    					0xFF, 0x00, 0x00, 0xFF,
					    					0xFF, 0xFF, 0x00, 0xFF,
					    					0x00, 0xFF, 0x00, 0xFF,
					    					0x00, 0x00, 0xFF, 0xFF]);
			    return colors; 
			}
		]]>
	</mx:Script>
</mx:Application>
